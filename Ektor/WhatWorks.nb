(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     20324,        581]
NotebookOptionsPosition[     19279,        539]
NotebookOutlinePosition[     19635,        555]
CellTagsIndexPosition[     19592,        552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Things that \[OpenCurlyDoubleQuote]works\[CloseCurlyDoubleQuote]", \
"Title",
 CellChangeTimes->{{3.732963842898087*^9, 3.73296384721624*^9}}],

Cell[CellGroupData[{

Cell["Dataset Load", "Chapter",
 CellChangeTimes->{{3.732963852536234*^9, 3.7329638549763803`*^9}}],

Cell["\<\
Loading the raw signals and transforming them in a suitable wolfram list\
\>", "Text",
 CellChangeTimes->{{3.732963868075252*^9, 3.732963899072857*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"oxyYesMatlab", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/ettoremariotti/Desktop/Semmestre/BCI/Project/BCI-\
ThoughtRecognition/data_students/NIRSoxy_yes_signal.mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numSamplesOxyYes", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "oxyYesMatlab", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"oxyYesRaw", " ", "=", "  ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"oxyYesMatlab", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "x"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "numSamplesOxyYes"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oxyNoMatlab", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/ettoremariotti/Desktop/Semmestre/BCI/Project/BCI-\
ThoughtRecognition/data_students/NIRSoxy_no_signal.mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numSamplesOxyNo", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "oxyNoMatlab", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"oxyNoRaw", " ", "=", "  ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"oxyNoMatlab", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "x"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "numSamplesOxyNo"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oxyDataFullYes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"oxyYesRaw", "[", 
       RowBox[{"[", 
        RowBox[{"x", ",", "All", ",", "All"}], "]"}], "]"}], "\[Rule]", " ", 
      "\"\<Yes\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "numSamplesOxyYes"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"oxyDataFullNo", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"oxyNoRaw", "[", 
        RowBox[{"[", 
         RowBox[{"x", ",", "All", ",", "All"}], "]"}], "]"}], "\[Rule]", " ", 
       "\"\<No\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "numSamplesOxyNo"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullDataYesAndNo", " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"oxyDataFullNo", ",", "oxyDataFullYes"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oxyYesRaw80", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", 
          RowBox[{"oxyYesRaw", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "81"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"oxyYesRaw80", ",", 
         RowBox[{"Transpose", "@", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"Transpose", "@", 
             RowBox[{"oxyYesRaw", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"-", "1"}]}], "]"}]}]}], "]"}], ",", " ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"oxyYesRaw80", ",", 
         RowBox[{"oxyYesRaw", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", "numSamplesOxyYes", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oxyNoRaw80", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", 
         RowBox[{"oxyNoRaw", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "81"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"oxyNoRaw80", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Transpose", "@", 
            RowBox[{"oxyNoRaw", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}]}], "]"}], ",", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"oxyNoRaw80", ",", 
        RowBox[{"oxyNoRaw", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", "numSamplesOxyNo", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7329639126769342`*^9, 3.732963976286038*^9}, {
   3.732964052449965*^9, 3.732964073231682*^9}, 3.7330521345745497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Preprocessing", "Chapter",
 CellChangeTimes->{{3.7329641071552687`*^9, 3.7329641105131073`*^9}}],

Cell[CellGroupData[{

Cell["Dimensionality Reduction on Channels", "Subsubsection",
 CellChangeTimes->{{3.7329644297172117`*^9, 3.732964442531405*^9}}],

Cell["Dimensionality reduction of the channels performed via PCA", "Text",
 CellChangeTimes->{{3.7329641252680283`*^9, 3.732964154154067*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"reducedOxyNo80", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"DimensionReduce", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", "#"}], ",", "2", ",", 
        RowBox[{
        "Method", "\[Rule]", "\"\<PrincipalComponentsAnalysis\>\""}]}], "]"}],
       "]"}], "&"}], "/@", "oxyNoRaw80"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reducedOxyYes80", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"DimensionReduce", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", "#"}], ",", "2", ",", 
        RowBox[{
        "Method", "\[Rule]", "\"\<PrincipalComponentsAnalysis\>\""}]}], "]"}],
       "]"}], "&"}], "/@", "oxyYesRaw80"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.732964165533478*^9, 3.732964165875785*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "@", 
    RowBox[{"reducedOxyYes80", "[", 
     RowBox[{"[", 
      RowBox[{"Floor", "@", "i"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734354835441021*^9, 3.734354976833805*^9}, {
  3.7343551367685127`*^9, 3.734355156990316*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 30}}, Typeset`size$$ = {360., {107., 112.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$40401$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$40401$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Part[$CellContext`reducedOxyYes80, 
         Floor[$CellContext`i$$]]], 
      "Specifications" :> {{$CellContext`i$$, 1, 30}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {152., 158.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7343548516093407`*^9, 3.7343549770151453`*^9}, {
  3.734355152781315*^9, 3.734355157504209*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Standardized Machine Learning", "Chapter",
 CellChangeTimes->{{3.7329642661845827`*^9, 3.732964275935154*^9}}],

Cell[TextData[{
 "Ad-",
 StyleBox["hoc",
  IgnoreSpellCheck->True],
 " built models for automated classification"
}], "Text",
 CellChangeTimes->{{3.732964281279008*^9, 3.732964293894945*^9}, {
  3.7329644521016073`*^9, 3.732964453923853*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unifyData", "[", 
     RowBox[{"yes_List", ",", "no_List"}], "]"}], ":=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"yes", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "All", ",", "All"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Length", "[", "yes", "]"}]}], "}"}]}], "]"}], "\[Rule]", 
        " ", "\"\<Yes\>\""}], "]"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"no", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "All", ",", "All"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Length", "[", "no", "]"}]}], "}"}]}], "]"}], "\[Rule]", 
        "\"\<No\>\""}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"partitionTrainTest", "[", 
     RowBox[{"data_List", ",", "frac_Real"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"trainDataYesAndNo", " ", "=", " ", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"data", ",", 
         RowBox[{"Round", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "data", "]"}], "*", "frac"}], ")"}]}]}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"testDataYesAndNo", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"data", ",", "trainDataYesAndNo"}], "]"}]}]}], "}"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rotateLabel", "[", "label_", "]"}], ":=", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Rotate", "[", 
      RowBox[{"label", ",", 
       RowBox[{"Pi", "/", "4"}]}], "]"}], ",", "30", ",", "Bold", ",", 
     RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showPerformance", "[", 
    RowBox[{"dataTrain_List", ",", "dataTest_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{"All", ",", 
        RowBox[{
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{"#", ",", "dataTest", ",", "\"\<Accuracy\>\""}], "]"}], 
         "&"}]}], "]"}], "@", 
      RowBox[{"(", 
       RowBox[{"Association", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[Rule]", "  ", 
            RowBox[{"Classify", "[", 
             RowBox[{"dataTrain", ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", "#", "}"}]}]}], "]"}]}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
            "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
            "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
            "\"\<SupportVectorMachine\>\""}], "}"}]}], ")"}]}], ")"}]}], ",", 
     
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"Automatic", ",", "Below", ",", 
        RowBox[{
         RowBox[{"Rotate", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Pi", "/", "2.4"}]}], "]"}], "&"}]}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"LabelingFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"#", ",", "Above"}], "]"}], "&"}], ")"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.732964303186974*^9, 3.732964320915852*^9}, {
  3.732964361839675*^9, 3.732964364654125*^9}}],

Cell[CellGroupData[{

Cell["Automatic ML with Leave-one-out performance assessment", "Subsection",
 CellChangeTimes->{{3.733505438220957*^9, 3.7335054566748133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leaveOneOutAccuracy", "[", "dataSet_", "]"}], " ", ":=", "  ", 
  RowBox[{"Mean", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{
       RowBox[{"Classify", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{"dataSet", ",", 
          RowBox[{"{", "#", "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"Take", "[", 
        RowBox[{"dataSet", ",", 
         RowBox[{"{", "#", "}"}]}], "]"}], ",", "\"\<Accuracy\>\""}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "dataSet", "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leaveOneOutAccuracy", "[", 
   RowBox[{"dataSet_", ",", "str_"}], "]"}], " ", ":=", "  ", 
  RowBox[{"Mean", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{
       RowBox[{"Classify", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dataSet", ",", 
           RowBox[{"{", "#", "}"}]}], "]"}], ",", 
         RowBox[{"Method", "\[Rule]", "str"}]}], "]"}], ",", 
       RowBox[{"Take", "[", 
        RowBox[{"dataSet", ",", 
         RowBox[{"{", "#", "}"}]}], "]"}], ",", "\"\<Accuracy\>\""}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "dataSet", "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leaveOneOutAccuracyEnhanced", "[", 
   RowBox[{"dataSet_", ",", "str_"}], "]"}], " ", ":=", "  ", 
  RowBox[{"Mean", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{
       RowBox[{"Classify", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dataSet", ",", 
           RowBox[{"{", "#", "}"}]}], "]"}], ",", 
         RowBox[{"Method", "\[Rule]", "str"}], ",", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], 
       ",", 
       RowBox[{"Take", "[", 
        RowBox[{"dataSet", ",", 
         RowBox[{"{", "#", "}"}]}], "]"}], ",", "\"\<Accuracy\>\""}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "dataSet", "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"autoML", "[", "data_", "]"}], ":=", "  ", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"leaveOneOutAccuracy", "[", 
        RowBox[{"data", ",", "#"}], "]"}], "&"}], "/@", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
        "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
        "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
        "\"\<SupportVectorMachine\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
          "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
          "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
          "\"\<SupportVectorMachine\>\""}], "}"}], ",", "Below", ",", 
        RowBox[{
         RowBox[{"Rotate", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Pi", "/", "2.4"}]}], "]"}], "&"}]}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"LabelingFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"#", ",", "Above"}], "]"}], "&"}], ")"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"autoMLAccurate", "[", "data_", "]"}], ":=", "  ", 
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"leaveOneOutAccuracyEnhanced", "[", 
       RowBox[{"data", ",", "#"}], "]"}], "&"}], "/@", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
       "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
       "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
       "\"\<SupportVectorMachine\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
         "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
         "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
         "\"\<SupportVectorMachine\>\""}], "}"}], ",", "Below", ",", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Pi", "/", "2.4"}]}], "]"}], "&"}]}], "]"}]}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
    RowBox[{"LabelingFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Placed", "[", 
        RowBox[{"#", ",", "Above"}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.733505466070899*^9, 3.7335054665183764`*^9}, {
  3.733917329430942*^9, 3.7339173449236603`*^9}, {3.7339173943283463`*^9, 
  3.733917440977852*^9}, {3.733917488058661*^9, 3.733917497449851*^9}, {
  3.733917529468424*^9, 3.7339175340512342`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 756},
WindowMargins->{{Automatic, -115}, {14, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 148, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[753, 28, 99, 1, 65, "Chapter"],
Cell[855, 31, 162, 3, 30, "Text"],
Cell[1020, 36, 4941, 139, 600, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5998, 180, 107, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[6130, 185, 129, 1, 35, "Subsubsection"],
Cell[6262, 188, 142, 1, 30, "Text"],
Cell[6407, 191, 859, 23, 138, "Input"],
Cell[CellGroupData[{
Cell[7291, 218, 399, 10, 32, "Input"],
Cell[7693, 230, 1699, 35, 327, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9453, 272, 116, 1, 65, "Chapter"],
Cell[9572, 275, 242, 7, 30, "Text"],
Cell[9817, 284, 3917, 107, 369, "Input"],
Cell[CellGroupData[{
Cell[13759, 395, 144, 1, 44, "Subsection"],
Cell[13906, 398, 5333, 136, 621, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

